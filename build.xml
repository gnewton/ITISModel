<?xml version="1.0" encoding="UTF-8"?>
<project name="itismodel" default="dist" basedir=".">
	<description>
	  ITISModel
    </description>
    <property name="compile.debug"       value="true"/>
    <property name="compile.deprecation" value="true"/>
    <property name="compile.optimize"    value="false"/>


	<!-- global properties for this build -->

	<property name="Name" value="itisModel"/>
	<property name="version" value="1"/>
	<property name="src" location="./src"/>
	<property name="test" location="./test"/>
	<property name="build" location="./build"/>
	<property name="dist"  location="dist"/>
	<property name="docs"  location="docs"/>

	<property name="jarName" value="itisModel-${version}.jar" />
<!-- Start libraries -->
<!--
        <property name="xmlApi" value="lib/xml-apis-1.4.01.jar"/>
-->
<!-- End libraries -->

<!-- Start test libraries -->
        <property name="junit" value="lib/test/junit-4.11.jar"/>
        <property name="hamcrest" value="lib/test/hamcrest-core-1.3.jar"/>
<!-- End test libraries -->

	<property name="debug" value="on"/>
	<property name="optimize" value="on"/>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp>
			<format property="year" pattern="yyyy" locale="en" />
		</tstamp>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac 
		    includeantruntime="false"
		    srcdir="${src}"
		    destdir="${build}"
		    
		    debug="${compile.debug}"
		    deprecation="${compile.deprecation}"
		    optimize="${compile.optimize}"
                    >
		    <!--
			<compilerarg value="-Xlint:all"/>
		    -->
		  </javac>
	</target>


	<target name="dist" depends="compile"
        description="generate the distribution" 
        >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib"/>
       		<jar 
                   jarfile="${dist}/lib/${jarName}/" 
                   basedir="${build}"
                 >
  		 <manifest>
                 <!--
		  <attribute name="Main-Class" value="ca.gnewton.lusql.core.LuSqlMain" />
                  <attribute name="Class-Path" value="./ ${dbcp} ${lucene} ${cli} ${pool} ${mysql}" />
                 -->
		</manifest>
		</jar>
	</target>

	<target name="docs" depends="compile">
		<mkdir dir="${docs}"/>
		<javadoc 
             sourcepath="${src}"

             destdir="${docs}"
             author="true"
             version="true"
           	 use="true"
	         breakiterator="yes"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} API Documentation"
             doctitle="&lt;font face='Verdana,Arial,sans-serif'>${Name}: Entities for ITIS project/font>"
             bottom="Copyright &#169; ${year} Agriculture and Agri-Food Canada"             
    />
	</target>


	<target name="clean"
        description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete file="${dist}/lib/${jarName}"/>
		<delete dir="${docs}"/>
	</target>


	<target name="compileTest" depends="compile" description="compile the tests ">
		<!-- Compile the java code from ${src} into ${build} -->

		<javac 
		    srcdir="${test}"
		    destdir="${build}"
		    
		    debug="${compile.debug}"
		    deprecation="${compile.deprecation}"
		    optimize="${compile.optimize}"
		    classpath="${junit}:${hamcrest}:${dist}/lib/${jarName}"
                    >
		    <!--
			<compilerarg value="-Xlint:all"/>
		    -->
		  </javac>
	</target>

	<target name="test" depends="compileTest">
	  <junit>
	    <classpath>
	      <pathelement location="bin" />    
	      <pathelement location="lib/junit-4.10.jar"/>
	      <pathelement path="${java.class.path}"/>
	    </classpath>    
	    <batchtest>
	      <fileset dir="${test}">
		<include name="**/*Test*" />
	      </fileset>
	    </batchtest>
	    <formatter type="brief" usefile="false"/>
	  </junit>
	</target> 
</project>
